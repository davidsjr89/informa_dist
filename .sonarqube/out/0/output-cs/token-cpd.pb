øN
^c:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Controllers\HomeController.cs
	namespace 	
Usuario
 
. 
API 
. 
Controllers !
{		 
[

 
Route

 

(


 
$str

 
)

 
]

 
[ 
ApiController 
] 
public 

class 
HomeController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IRepositorioUsuario ,
_repositorioUsuario- @
;@ A
public 
HomeController 
( 
IRepositorioUsuario 1
repositorioUsuario2 D
)D E
{ 	
_repositorioUsuario 
=  !
repositorioUsuario" 4
??5 7
throw8 =
new> A
SystemB H
.H I!
ArgumentNullExceptionI ^
(^ _
nameof_ e
(e f
repositorioUsuariof x
)x y
)y z
;z {
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
dynamic' .
>. /
>/ 0
BuscarPorId1 <
(< =
int= @
idA C
)C D
{ 	
if 
( 
! 

ModelState 
. 
IsValid #
)# $
NotFound% -
(- .
new. 1
{2 3
message4 ;
=< =
$str> e
}f g
)g h
;h i
var 
user 
= 
await 
_repositorioUsuario 0
.0 1
BuscarPorId1 <
(< =
id= ?
)? @
;@ A
if 
( 
user 
== 
null 
) 
return $
NotFound% -
(- .
new. 1
{2 3
message4 ;
=< =
$str> Z
}[ \
)\ ]
;] ^
return 
user 
; 
} 	
[   	
HttpPost  	 
]   
[!! 	
Route!!	 
(!! 
$str!! 
)!! 
]!! 
public"" 
async"" 
Task"" 
<"" 
ActionResult"" &
<""& '
dynamic""' .
>"". /
>""/ 0
Login""1 6
(""6 7
	UserLogin""7 @
model""A F
)""F G
{## 	
if$$ 
($$ 
!$$ 

ModelState$$ 
.$$ 
IsValid$$ #
)$$# $
NotFound$$% -
($$- .
new$$. 1
{$$2 3
message$$4 ;
=$$< =
$str$$> e
}$$f g
)$$g h
;$$h i
var%% 
user%% 
=%% 
await%% 
_repositorioUsuario%% 0
.%%0 1
Login%%1 6
(%%6 7
model%%7 <
.%%< =
Nome%%= A
,%%A B
model%%C H
.%%H I
Senha%%I N
)%%N O
;%%O P
if'' 
('' 
user'' 
=='' 
null'' 
)'' 
return'' $
NotFound''% -
(''- .
new''. 1
{''2 3
message''4 ;
=''< =
$str''> Z
}''[ \
)''\ ]
;''] ^
var)) 
token)) 
=)) 
TokenService)) $
.))$ %
GenerateToken))% 2
())2 3
user))3 7
)))7 8
;))8 9
var** 
	UserToken** 
=** 
new** 
	UserToken**  )
{*** +
User**, 0
=**1 2
user**3 7
,**7 8
Token**9 >
=**? @
token**A F
}**G H
;**H I
return++ 
	UserToken++ 
;++ 
},, 	
[.. 	
HttpPost..	 
].. 
[// 	
Route//	 
(// 
$str// 
)// 
]// 
[00 	
	Authorize00	 
(00 
Roles00 
=00 
$str00 *
)00* +
]00+ ,
public11 
async11 
Task11 
<11 
ActionResult11 &
<11& '
dynamic11' .
>11. /
>11/ 0
	Cadastrar111 :
(11: ;
User11; ?
model11@ E
)11E F
{22 	
if33 
(33 
!33 

ModelState33 
.33 
IsValid33 #
)33# $
return33% +
NotFound33, 4
(334 5
new335 8
{339 :
message33; B
=33C D
$str33E l
}33m n
)33n o
;33o p
var44 
user44 
=44 
await44 
_repositorioUsuario44 0
.440 1
BuscarPorNome441 >
(44> ?
model44? D
.44D E
Nome44E I
)44I J
;44J K
if66 
(66 
user66 
==66 
null66 
)66 
{77 
var88 
resposta88 
=88 
await88 $
_repositorioUsuario88% 8
.888 9
CadastrarUsuario889 I
(88I J
model88J O
)88O P
;88P Q
var99 
token99 
=99 
TokenService99 (
.99( )
GenerateToken99) 6
(996 7
model997 <
)99< =
;99= >
resposta:: 
.:: 
Senha:: 
=::  
$str::! #
;::# $
var;; 
	UserToken;; 
=;; 
new;;  #
	UserToken;;$ -
{;;. /
User;;0 4
=;;5 6
resposta;;7 ?
,;;? @
Token;;A F
=;;G H
token;;I N
};;O P
;;;P Q
return<< 
Created<< 
(<< 
$str<< !
,<<! "
	UserToken<<# ,
)<<, -
;<<- .
}== 
return>> 
NotFound>> 
(>> 
new>> 
{>>  !
message>>" )
=>>* +
$str>>, U
}>>V W
)>>W X
;>>X Y
}?? 	
[AA 	

HttpDeleteAA	 
]AA 
[BB 	
RouteBB	 
(BB 
$strBB 
)BB 
]BB 
[CC 	
	AuthorizeCC	 
(CC 
RolesCC 
=CC 
$strCC *
)CC* +
]CC+ ,
publicDD 
asyncDD 
TaskDD 
<DD 
ActionResultDD &
<DD& '
dynamicDD' .
>DD. /
>DD/ 0
DeletarDD1 8
(DD8 9
intDD9 <
idDD= ?
)DD? @
{EE 	
ifFF 
(FF 
!FF 

ModelStateFF 
.FF 
IsValidFF "
)FF" #
returnFF$ *
NotFoundFF+ 3
(FF3 4
newFF4 7
{FF8 9
messageFF: A
=FFB C
$strFFD k
}FFl m
)FFm n
;FFn o
varGG 
userGG 
=GG 
awaitGG 
_repositorioUsuarioGG 0
.GG0 1
BuscarPorIdGG1 <
(GG< =
idGG= ?
)GG? @
;GG@ A
ifII 
(II 
userII 
==II 
nullII 
)II 
returnII $
NotFoundII% -
(II- .
newII. 1
{II2 3
messageII4 ;
=II< =
$strII> S
}IIT U
)IIU V
;IIV W
varKK 
respostaKK 
=KK 
awaitKK  
_repositorioUsuarioKK! 4
.KK4 5
DeletarUsuarioKK5 C
(KKC D
userKKD H
)KKH I
;KKI J
returnMM 
OkMM 
(MM 
respostaMM 
)MM 
;MM  
}NN 	
[PP 	
HttpPutPP	 
]PP 
[QQ 	
RouteQQ	 
(QQ 
$strQQ 
)QQ  
]QQ  !
[RR 	
	AuthorizeRR	 
(RR 
RolesRR 
=RR 
$strRR *
)RR* +
]RR+ ,
publicSS 
asyncSS 
TaskSS 
<SS 
ActionResultSS &
<SS& '
dynamicSS' .
>SS. /
>SS/ 0
	AtualizarSS1 :
(SS: ;
intSS; >
idSS? A
,SSA B
UserSSC G
modelSSH M
)SSM N
{TT 	
ifUU 
(UU 
!UU 

ModelStateUU 
.UU 
IsValidUU #
)UU# $
returnUU% +
NotFoundUU, 4
(UU4 5
newUU5 8
{UU9 :
messageUU; B
=UUC D
$strUUE l
}UUm n
)UUn o
;UUo p
varVV 
userVV 
=VV 
awaitVV 
_repositorioUsuarioVV 0
.VV0 1
BuscarPorIdVV1 <
(VV< =
idVV= ?
)VV? @
;VV@ A
ifXX 
(XX 
userXX 
==XX 
nullXX 
)XX 
returnXX $
NotFoundXX% -
(XX- .
newXX. 1
{XX2 3
messageXX4 ;
=XX< =
$strXX> S
}XXT U
)XXU V
;XXV W
modelYY 
.YY 
IdYY 
=YY 
userYY 
.YY 
IdYY 
;YY 
varZZ 
respostaZZ 
=ZZ 
awaitZZ  
_repositorioUsuarioZZ! 4
.ZZ4 5
AtualizarUsuarioZZ5 E
(ZZE F
modelZZF K
)ZZK L
;ZZL M
return\\ 
Ok\\ 
(\\ 
resposta\\ 
)\\ 
;\\  
}]] 	
}^^ 
}__ Ô	
Tc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Data\DataContext.cs
	namespace 	
Usuario
 
. 
API 
. 
Data 
{ 
public 

class 
DataContext 
: 
	DbContext '
{ 
public 
DataContext 
( 
DbContextOptions +
options, 3
)3 4
:5 6
base7 ;
(; <
options< C
)C D
{E F
}G H
public		 
DbSet		 
<		 
User		 
>		 
Usuarios		 #
{		$ %
get		& )
;		) *
set		+ .
;		. /
}		0 1
public

 
DataContext

 
(

 
)

 
{

 
}

 
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
} 	
} 
} þ
Oc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\User.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
User 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! <
)		< =
]		= >
[

 	
StringLength

	 
(

 
$num

 
,

 
ErrorMessage

 &
=

' (
$str

) ]
,

] ^
MinimumLength

_ l
=

m n
$num

o p
)

p q
]

q r
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) ]
,] ^
MinimumLength_ l
=m n
$numo q
)q r
]r s
public 
string 
Cpf 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
EmailAddress	 
( 
ErrorMessage "
=# $
$str% K
)K L
]L M
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) ]
,] ^
MinimumLength_ l
=m n
$numo p
)p q
]q r
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) ]
,] ^
MinimumLength_ l
=m n
$numo p
)p q
]q r
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage &
=' (
$str) ]
,] ^
MinimumLength_ l
=m n
$numo p
)p q
]q r
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} 	
Tc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\UserLogin.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
	UserLogin 
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
[

 	
Required

	 
(

 
ErrorMessage

 
=

  
$str

! <
)

< =
]

= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* ^
,^ _
MinimumLength` m
=n o
$nump q
)q r
]r s
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
} 
} è
Tc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\UserToken.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
	UserToken 
{ 
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
} 
} À

Kc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Program.cs
	namespace 	
Usuario
 
. 
API 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ë
dc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Repositories\IRepositorioUsuario.cs
	namespace 	
Usuario
 
. 
API 
. 
Repositories "
{ 
public 

	interface 
IRepositorioUsuario (
{ 
Task		 
<		 
IList		 
<		 
User		 
>		 
>		 
ListaUsuario		 &
(		& '
)		' (
;		( )
Task

 
<

 
User

 
>

 
Login

 
(

 
string

 
usuario

  '
,

' (
string

) /
senha

0 5
)

5 6
;

6 7
Task 
< 
User 
> 
BuscarPorId 
( 
int "
id# %
)% &
;& '
Task 
< 
User 
> 
BuscarPorNome  
(  !
string! '
nome( ,
), -
;- .
Task 
< 
User 
> 
AtualizarUsuario #
(# $
User$ (
usuario) 0
)0 1
;1 2
Task 
< 
User 
> 
CadastrarUsuario #
(# $
User$ (
usuario) 0
)0 1
;1 2
Task 
< 
User 
> 
DeletarUsuario !
(! "
User" &
usuario' .
). /
;/ 0
} 
} 3
cc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Repositories\RepositorioUsuario.cs
	namespace

 	
Usuario


 
.

 
API

 
.

 
Repositories

 "
{ 
public 

class 
RepositorioUsuario #
:$ %
IRepositorioUsuario& 9
{ 
private 
readonly 
DataContext $
_context% -
;- .
public 
RepositorioUsuario !
(! "
DataContext" -
context. 5
)5 6
{ 	
_context 
= 
context 
?? !
throw" '
new( +!
ArgumentNullException, A
(A B
nameofB H
(H I
contextI P
)P Q
)Q R
;R S
} 	
public 
async 
Task 
< 
User 
> 
AtualizarUsuario  0
(0 1
User1 5
usuario6 =
)= >
{ 	
usuario 
. 
Senha 
= 
Settings $
.$ %
Criptografia% 1
(1 2
usuario2 9
.9 :
Senha: ?
)? @
;@ A
_context 
. 
Update 
( 
usuario #
)# $
;$ %
return 
_context 
. 
SaveChangesAsync ,
(, -
)- .
.. /
Result/ 5
>6 7
$num8 9
?: ;
usuario< C
:D E
nullF J
;J K
} 	
public 
async 
Task 
< 
User 
> 
BuscarPorId  +
(+ ,
int, /
id0 2
)2 3
{ 	
var 
user 
= 
await  
_context! )
.) *
Usuarios* 2
.2 3
AsNoTracking3 ?
(? @
)@ A
.A B
WhereB G
(G H
xH I
=>J L
xM N
.N O
IdO Q
==R T
idU W
)W X
.X Y
FirstOrDefaultAsyncY l
(l m
)m n
;n o
return   
user   
??   
null   #
;  # $
}!! 	
public## 
async## 
Task## 
<## 
User## 
>## 
BuscarPorNome##  -
(##- .
string##. 4
nome##5 9
)##9 :
{$$ 	
var%% 
user%% 
=%% 
await%% 
_context%% %
.%%% &
Usuarios%%& .
.%%. /
AsNoTracking%%/ ;
(%%; <
)%%< =
.%%= >
Where%%> C
(%%C D
x%%D E
=>%%F H
x%%I J
.%%J K
Nome%%K O
==%%P R
nome%%S W
)%%W X
.%%X Y
FirstOrDefaultAsync%%Y l
(%%l m
)%%m n
;%%n o
return&& 
user&& 
??&& 
null&& 
;&&  
}'' 	
public)) 
async)) 
Task)) 
<)) 
User)) 
>)) 
CadastrarUsuario))  0
())0 1
User))1 5
usuario))6 =
)))= >
{** 	
usuario++ 
.++ 
Senha++ 
=++ 
Settings++ $
.++$ %
Criptografia++% 1
(++1 2
usuario++2 9
.++9 :
Senha++: ?
)++? @
;++@ A
await,, 
_context,, 
.,, 
AddAsync,, #
(,,# $
usuario,,$ +
),,+ ,
;,,, -
return-- 
await-- 
_context-- !
.--! "
SaveChangesAsync--" 2
(--2 3
)--3 4
>--5 6
$num--7 8
?--9 :
usuario--; B
:--C D
null--E I
;--I J
}.. 	
public00 
async00 
Task00 
<00 
User00 
>00 
DeletarUsuario00  .
(00. /
User00/ 3
user004 8
)008 9
{11 	
_context22 
.22 
Remove22 
(22 
user22  
)22  !
;22! "
return33 
_context33 
.33 
SaveChangesAsync33 ,
(33, -
)33- .
.33. /
Result33/ 5
>336 7
$num338 9
?33: ;
user33< @
:33A B
null33C G
;33G H
}44 	
public66 
async66 
Task66 
<66 
IList66 
<66  
User66  $
>66$ %
>66% &
ListaUsuario66' 3
(663 4
)664 5
{77 	
var88 
user88 
=88 
await88 
_context88 %
.88% &
Usuarios88& .
.88. /
AsNoTracking88/ ;
(88; <
)88< =
.88= >
ToListAsync88> I
(88I J
)88J K
;88K L
return99 
user99 
??99 
null99 
;99  
}:: 	
public<< 
async<< 
Task<< 
<<< 
User<< 
><< 
Login<<  %
(<<% &
string<<& ,
usuario<<- 4
,<<4 5
string<<6 <
senha<<= B
)<<B C
{== 	
senha>> 
=>> 
Settings>> 
.>> 
Criptografia>> )
(>>) *
senha>>* /
)>>/ 0
;>>0 1
var?? 
user?? 
=?? 
await?? 
_context?? %
.??% &
Usuarios??& .
.??. /
AsNoTracking??/ ;
(??; <
)??< =
.??= >
Where??> C
(??C D
x??D E
=>??F H
x??I J
.??J K
Nome??K O
==??P R
usuario??S Z
&&??[ ]
x??^ _
.??_ `
Senha??` e
==??f h
senha??i n
)??n o
.??o p 
FirstOrDefaultAsync	??p 
(
?? 
)
?? 
;
?? 
return@@ 
user@@ 
??@@ 
null@@ 
;@@  
}AA 	
}BB 
}CC 
Yc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Services\TokenService.cs
	namespace		 	
Usuario		
 
.		 
API		 
.		 
Services		 
{

 
public 

static 
class 
TokenService $
{ 
public 
static 
string 
GenerateToken *
(* +
User+ /
user0 4
)4 5
{ 	
var 
tokenHandler 
= 
new "#
JwtSecurityTokenHandler# :
(: ;
); <
;< =
var 
key 
= 
Encoding 
. 
ASCII $
.$ %
GetBytes% -
(- .
Settings. 6
.6 7
Secret7 =
)= >
;> ?
var 
tokenDescriptor 
=  !
new" %#
SecurityTokenDescriptor& =
{ 
Subject 
= 
new 
ClaimsIdentity ,
(, -
new- 0
Claim1 6
[6 7
]7 8
{ 
new 
Claim 
( 

ClaimTypes (
.( )
Name) -
,- .
user/ 3
.3 4
Nome4 8
.8 9
ToString9 A
(A B
)B C
)C D
,D E
new 
Claim 
( 

ClaimTypes (
.( )
Role) -
,- .
user/ 3
.3 4
Role4 8
.8 9
ToString9 A
(A B
)B C
)C D
} 
) 
, 
Expires 
= 
DateTime "
." #
UtcNow# )
.) *
AddHours* 2
(2 3
$num3 4
)4 5
,5 6
SigningCredentials "
=# $
new% (
SigningCredentials) ;
(; <
new< ? 
SymmetricSecurityKey@ T
(T U
keyU X
)X Y
,Y Z
SecurityAlgorithms[ m
.m n 
HmacSha256Signature	n 
)
 
} 
; 
tokenHandler 
. 
CreateToken $
($ %
tokenDescriptor% 4
)4 5
;5 6
var 
token 
= 
tokenHandler $
.$ %
CreateToken% 0
(0 1
tokenDescriptor1 @
)@ A
;A B
return 
tokenHandler 
.  

WriteToken  *
(* +
token+ 0
)0 1
;1 2
} 	
} 
}   À,
Kc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Startup.cs
	namespace 	
Usuario
 
. 
API 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddDbContext !
<! "
DataContext" -
>- .
(. /
x/ 0
=>1 3
x4 5
.5 6
UseSqlServer6 B
(B C
ConfigurationC P
.P Q
GetConnectionStringQ d
(d e
$stre x
)x y
)y z
)z {
;{ |
services 
. 
	AddScoped 
< 
IRepositorioUsuario 2
,2 3
RepositorioUsuario4 F
>F G
(G H
)H I
;I J
services 
. 
AddCors 
( 
) 
; 
services 
. 
AddControllers #
(# $
)$ %
;% &
var   
key   
=   
Encoding   
.   
ASCII   $
.  $ %
GetBytes  % -
(  - .
Settings  . 6
.  6 7
Secret  7 =
)  = >
;  > ?
services!! 
.!! 
AddAuthentication!! &
(!!& '
x!!' (
=>!!) +
{"" 
x## 
.## %
DefaultAuthenticateScheme## +
=##, -
JwtBearerDefaults##. ?
.##? @ 
AuthenticationScheme##@ T
;##T U
x$$ 
.$$ "
DefaultChallengeScheme$$ (
=$$) *
JwtBearerDefaults$$+ <
.$$< = 
AuthenticationScheme$$= Q
;$$Q R
}%% 
)%% 
.%% 
AddJwtBearer%% 
(%% 
x%% 
=>%%  
{&& 
x'' 
.''  
RequireHttpsMetadata'' &
=''' (
false'') .
;''. /
x(( 
.(( 
	SaveToken(( 
=(( 
true(( "
;((" #
x)) 
.)) %
TokenValidationParameters)) +
=)), -
new)). 1%
TokenValidationParameters))2 K
{** $
ValidateIssuerSigningKey++ ,
=++- .
true++/ 3
,++3 4
IssuerSigningKey,, $
=,,% &
new,,' * 
SymmetricSecurityKey,,+ ?
(,,? @
key,,@ C
),,C D
,,,D E
ValidateIssuer-- "
=--# $
false--% *
,--* +
ValidateAudience.. $
=..% &
false..' ,
}// 
;// 
}00 
)00 
;00 
services22 
.22 
AddSwaggerGen22 "
(22" #
c22# $
=>22% '
{33 
c44 
.44 

SwaggerDoc44 
(44 
$str44 !
,44! "
new44# &
OpenApiInfo44' 2
{443 4
Title445 :
=44; <
$str44= J
,44J K
Version44L S
=44T U
$str44V Z
}44[ \
)44\ ]
;44] ^
}55 
)55 
;55 
}66 	
public88 
void88 
	Configure88 
(88 
IApplicationBuilder88 1
app882 5
,885 6
IWebHostEnvironment887 J
env88K N
)88N O
{99 	
if:: 
(:: 
env:: 
.:: 
IsDevelopment:: !
(::! "
)::" #
)::# $
{;; 
app<< 
.<< %
UseDeveloperExceptionPage<< -
(<<- .
)<<. /
;<</ 0
app== 
.== 

UseSwagger== 
(== 
)==  
;==  !
app>> 
.>> 
UseSwaggerUI>>  
(>>  !
c>>! "
=>>># %
c>>& '
.>>' (
SwaggerEndpoint>>( 7
(>>7 8
$str>>8 R
,>>R S
$str>>T d
)>>d e
)>>e f
;>>f g
}?? 
appAA 
.AA 

UseRoutingAA 
(AA 
)AA 
;AA 
appCC 
.CC 
UseCorsCC 
(CC 
xCC 
=>CC 
xCC 
.DD 
AllowAnyOriginDD 
(DD  
)DD  !
.EE 
AllowAnyMethodEE 
(EE  
)EE  !
.FF 
AllowAnyHeaderFF 
(FF  
)FF  !
)FF! "
;FF" #
appGG 
.GG 
UseAuthenticationGG !
(GG! "
)GG" #
;GG# $
appHH 
.HH 
UseAuthorizationHH  
(HH  !
)HH! "
;HH" #
appJJ 
.JJ 
UseEndpointsJJ 
(JJ 
	endpointsJJ &
=>JJ' )
{KK 
	endpointsLL 
.LL 
MapControllersLL (
(LL( )
)LL) *
;LL* +
}MM 
)MM 
;MM 
}NN 	
}OO 
}PP ²
Qc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Util\Settings.cs
	namespace 	
Usuario
 
. 
API 
. 
Util 
{ 
public 

static 
class 
Settings  
{ 
public 
readonly 
static 
string %
Secret& ,
=- .
GerarSenhaAleatoria/ B
(B C
)C D
;D E
public		 
static		 
string		 
Criptografia		 )
(		) *
string		* 0
texto		1 6
)		6 7
{

 	
return 
Convert 
. 
ToBase64String )
() *
Encoding* 2
.2 3
ASCII3 8
.8 9
GetBytes9 A
(A B
textoB G
)G H
)H I
;I J
} 	
private 
static 
string 
GerarSenhaAleatoria 1
(1 2
)2 3
{ 	
string 
chars 
= 
$str =
;= >
string 
pass 
= 
$str 
; 
Random 
random 
= 
new 
(  
)  !
;! "
for 
( 
int 
f 
= 
$num 
; 
f 
< 
$num  "
;" #
f$ %
++% '
)' (
{ 
pass 
+= 
chars 
. 
	Substring '
(' (
random( .
.. /
Next/ 3
(3 4
$num4 5
,5 6
chars7 <
.< =
Length= C
-D E
$numF G
)G H
,H I
$numJ K
)K L
;L M
} 
return 
pass 
; 
} 	
} 
} 