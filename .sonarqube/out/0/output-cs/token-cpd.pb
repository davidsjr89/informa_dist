¿
^c:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Controllers\HomeController.cs
	namespace 	
Usuario
 
. 
API 
. 
Controllers !
{		 
[

 
Route

 

(


 
$str

 
)

 
]

 
[ 
ApiController 
] 
public 

class 
HomeController 
:  !
ControllerBase" 0
{ 
[ 	
HttpPost	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
dynamic' .
>. /
>/ 0
Login1 6
(6 7
	UserLogin7 @
modelA F
)F G
{ 	
var 
user 
= 
UserRepository %
.% &
Get& )
() *
model* /
./ 0
Nome0 4
,4 5
model6 ;
.; <
Senha< A
)A B
;B C
if 
( 
user 
== 
null 
) 
return $
NotFound% -
(- .
new. 1
{2 3
message4 ;
=< =
$str> Z
}[ \
)\ ]
;] ^
var 
token 
= 
TokenService $
.$ %
GenerateToken% 2
(2 3
user3 7
)7 8
;8 9
var 
	UserToken 
= 
new 
	UserToken  )
{* +
User, 0
=1 2
user3 7
,7 8
Token9 >
=? @
tokenA F
}G H
;H I
return 
	UserToken 
; 
} 	
[ 	
HttpPost	 
] 
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
[ 	
AllowAnonymous	 
] 
public   
string   
Anonima   
(   
)   
=>    "
$str  # ,
;  , -
[!! 	
HttpGet!!	 
]!! 
["" 	
Route""	 
("" 
$str"" 
)"" 
]"" 
[## 	
	Authorize##	 
]## 
public$$ 
string$$ 
Autenticado$$ !
($$! "
)$$" #
=>$$$ &
$str$$' 4
;$$4 5
[%% 	
HttpGet%%	 
]%% 
[&& 	
Route&&	 
(&& 
$str&& 
)&& 
]&& 
['' 	
	Authorize''	 
('' 
Roles'' 
='' 
$str'' *
)''* +
]''+ ,
public(( 
string(( 
Funcionario(( !
(((! "
)((" #
=>(($ &
User((' +
.((+ ,
Identity((, 4
.((4 5
Name((5 9
;((9 :
})) 
}** ¿
Oc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\User.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
User 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
(		 
ErrorMessage		 
=		  
$str		! <
)		< =
]		= >
public

 
string

 
Nome

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
public 
string 
Cpf 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
EmailAddress	 
( 
ErrorMessage "
=# $
$str% K
)K L
]L M
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	

JsonIgnore	 
] 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* ^
,^ _
MinimumLength` m
=n o
$nump q
)q r
]r s
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
} 
} Å	
Tc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\UserLogin.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
	UserLogin 
{ 
[ 	
Required	 
( 
ErrorMessage 
=  
$str! <
)< =
]= >
public 
string 
Nome 
{ 
get  
;  !
set" %
;% &
}' (
[

 	
Required

	 
(

 
ErrorMessage

 
=

  
$str

! <
)

< =
]

= >
[ 	
StringLength	 
( 
$num 
, 
ErrorMessage '
=( )
$str* ^
,^ _
MinimumLength` m
=n o
$nump q
)q r
]r s
public 
string 
Senha 
{ 
get !
;! "
set# &
;& '
}( )
} 
} Ë
Tc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Models\UserToken.cs
	namespace 	
Usuario
 
. 
API 
. 
Models 
{ 
public 

class 
	UserToken 
{ 
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ¿

Kc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Program.cs
	namespace

 	
Usuario


 
.

 
API

 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} Ô
_c:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Repositories\UserRepository.cs
	namespace 	
Usuario
 
. 
API 
. 
Repositories "
{ 
public 

class 
UserRepository 
{ 
public 
static 
User 
Get 
( 
string %
nome& *
,* +
string, 2
senha3 8
)8 9
{		 	
var

 
users

 
=

 
new

 
List

  
<

  !
User

! %
>

% &
(

& '
)

' (
{ 
new 
User 
{ 
Id 
= 
$num 
,  
Nome! %
=& '
$str( /
,/ 0
Senha1 6
=7 8
$str9 A
,A B
CpfC F
=G H
$strI T
,T U
EmailV [
=\ ]
$str^ o
,o p
Roleq u
=v w
$str	x á
}
á à
,
à â
new 
User 
{ 
Id 
= 
$num 
,  
Nome! %
=& '
$str( /
,/ 0
Senha1 6
=7 8
$str9 A
,A B
CpfC F
=G H
$strI T
,T U
EmailV [
=\ ]
$str^ o
,o p
Roleq u
=v w
$str	x Ü
}
Ü á
,
á à
} 
; 
return 
users 
. 
Find 
( 
x 
=>  "
x# $
.$ %
Nome% )
==* ,
nome- 1
&&2 4
x5 6
.6 7
Senha7 <
=== ?
senha@ E
)E F
;F G
} 	
} 
} è
Yc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Services\TokenService.cs
	namespace		 	
Usuario		
 
.		 
API		 
.		 
Services		 
{

 
public 

static 
class 
TokenService $
{ 
public 
static 
string 
GenerateToken *
(* +
User+ /
user0 4
)4 5
{ 	
var 
tokenHandler 
= 
new "#
JwtSecurityTokenHandler# :
(: ;
); <
;< =
var 
key 
= 
Encoding 
. 
ASCII $
.$ %
GetBytes% -
(- .
Settings. 6
.6 7
Secret7 =
)= >
;> ?
var 
tokenDescriptor 
=  !
new" %#
SecurityTokenDescriptor& =
{ 
Subject 
= 
new 
ClaimsIdentity ,
(, -
new- 0
Claim1 6
[6 7
]7 8
{ 
new 
Claim 
( 

ClaimTypes (
.( )
Name) -
,- .
user/ 3
.3 4
Nome4 8
.8 9
ToString9 A
(A B
)B C
)C D
,D E
new 
Claim 
( 

ClaimTypes (
.( )
Role) -
,- .
user/ 3
.3 4
Role4 8
.8 9
ToString9 A
(A B
)B C
)C D
} 
) 
, 
Expires 
= 
DateTime "
." #
UtcNow# )
.) *
AddHours* 2
(2 3
$num3 4
)4 5
,5 6
SigningCredentials "
=# $
new% (
SigningCredentials) ;
(; <
new< ? 
SymmetricSecurityKey@ T
(T U
keyU X
)X Y
,Y Z
SecurityAlgorithms[ m
.m n 
HmacSha256Signature	n Å
)
Å Ç
} 
; 
tokenHandler 
. 
CreateToken $
($ %
tokenDescriptor% 4
)4 5
;5 6
var 
token 
= 
tokenHandler $
.$ %
CreateToken% 0
(0 1
tokenDescriptor1 @
)@ A
;A B
return 
tokenHandler 
.  

WriteToken  *
(* +
token+ 0
)0 1
;1 2
} 	
} 
}   ”'
Kc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Startup.cs
	namespace 	
Usuario
 
. 
API 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddCors 
( 
) 
; 
services 
. 
AddControllers #
(# $
)$ %
;% &
var 
key 
= 
Encoding 
. 
ASCII $
.$ %
GetBytes% -
(- .
Settings. 6
.6 7
Secret7 =
)= >
;> ?
services 
. 
AddAuthentication &
(& '
x' (
=>) +
{ 
x 
. %
DefaultAuthenticateScheme +
=, -
JwtBearerDefaults. ?
.? @ 
AuthenticationScheme@ T
;T U
x 
. "
DefaultChallengeScheme (
=) *
JwtBearerDefaults+ <
.< = 
AuthenticationScheme= Q
;Q R
}   
)   
.   
AddJwtBearer   
(   
x   
=>    
{!! 
x## 
.##  
RequireHttpsMetadata## &
=##' (
true##) -
;##- .
x$$ 
.$$ 
	SaveToken$$ 
=$$ 
true$$ "
;$$" #
x%% 
.%% %
TokenValidationParameters%% +
=%%, -
new%%. 1%
TokenValidationParameters%%2 K
{&& $
ValidateIssuerSigningKey'' ,
=''- .
true''/ 3
,''3 4
IssuerSigningKey(( $
=((% &
new((' * 
SymmetricSecurityKey((+ ?
(((? @
key((@ C
)((C D
,((D E
ValidateIssuer** "
=**# $
true**% )
,**) *
ValidateAudience,, $
=,,% &
true,,' +
}-- 
;-- 
}.. 
).. 
;.. 
services// 
.// 
AddSwaggerGen// "
(//" #
c//# $
=>//% '
{00 
c11 
.11 

SwaggerDoc11 
(11 
$str11 !
,11! "
new11# &
OpenApiInfo11' 2
{113 4
Title115 :
=11; <
$str11= J
,11J K
Version11L S
=11T U
$str11V Z
}11[ \
)11\ ]
;11] ^
}22 
)22 
;22 
}33 	
public55 
void55 
	Configure55 
(55 
IApplicationBuilder55 1
app552 5
,555 6
IWebHostEnvironment557 J
env55K N
)55N O
{66 	
if77 
(77 
env77 
.77 
IsDevelopment77 !
(77! "
)77" #
)77# $
{88 
app99 
.99 %
UseDeveloperExceptionPage99 -
(99- .
)99. /
;99/ 0
app:: 
.:: 

UseSwagger:: 
(:: 
)::  
;::  !
app;; 
.;; 
UseSwaggerUI;;  
(;;  !
c;;! "
=>;;# %
c;;& '
.;;' (
SwaggerEndpoint;;( 7
(;;7 8
$str;;8 R
,;;R S
$str;;T d
);;d e
);;e f
;;;f g
}<< 
app>> 
.>> 

UseRouting>> 
(>> 
)>> 
;>> 
app@@ 
.@@ 
UseCors@@ 
(@@ 
x@@ 
=>@@ 
x@@ 
.AA 
AllowAnyOriginAA 
(AA  
)AA  !
.BB 
AllowAnyMethodBB 
(BB  
)BB  !
.CC 
AllowAnyHeaderCC 
(CC  
)CC  !
)CC! "
;CC" #
appDD 
.DD 
UseAuthenticationDD !
(DD! "
)DD" #
;DD# $
appEE 
.EE 
UseAuthorizationEE  
(EE  !
)EE! "
;EE" #
appGG 
.GG 
UseEndpointsGG 
(GG 
	endpointsGG &
=>GG' )
{HH 
	endpointsII 
.II 
MapControllersII (
(II( )
)II) *
;II* +
}JJ 
)JJ 
;JJ 
}KK 	
}LL 
}MM à
Qc:\Projetos\informa_dist\src\backend\informa\usuario\Usuario.API\Util\Settings.cs
	namespace 	
Usuario
 
. 
API 
. 
Util 
{ 
public 

static 
class 
Settings  
{ 
public 
static 
string 
Secret #
=$ %
GerarSenhaAleatoria& 9
(9 :
): ;
;; <
private 
static 
string 
GerarSenhaAleatoria 1
(1 2
)2 3
{		 	
string

 
chars

 
=

 
$str

 =
;

= >
string 
pass 
= 
$str 
; 
Random 
random 
= 
new 
Random  &
(& '
)' (
;( )
for 
( 
int 
f 
= 
$num 
; 
f 
< 
$num  "
;" #
f$ %
++% '
)' (
{ 
pass 
= 
pass 
+ 
chars #
.# $
	Substring$ -
(- .
random. 4
.4 5
Next5 9
(9 :
$num: ;
,; <
chars= B
.B C
LengthC I
-J K
$numL M
)M N
,N O
$numP Q
)Q R
;R S
} 
return 
pass 
; 
} 	
} 
} 